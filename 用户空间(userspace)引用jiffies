用户空间(userspace)引用jiffies

此方法可以推广，用以引用任何内核中的资源。
-----------------------------------------------------------------
在内核中通过/proc/kallsyms获得符号的地址

Linux内核符号表/proc/kallsyms的形成过程：
./scripts/kallsyms.c负责生成System.map
./kernel/kallsyms.c负责生成/proc/kallsyms
./scripts/kallsyms.c解析vmlinux(.tmp_vmlinux)生成kallsyms.S(.tmp_kallsyms.S)，然后内核编译过程中将kallsyms.S(内核符号表)编入内核镜像uImage
内核启动后./kernel/kallsyms.c解析uImage形成/proc/kallsyms

/proc/kallsyms包含了内核中的函数符号(包括没有EXPORT_SYMBOL)、全局变量(用EXPORT_SYMBOL导出的全局变量)。
----------------------------------------------------------------




#include <stdio.h>  
#include <sys/mman.h>  
#include <sys/types.h>  
#include <sys/stat.h>  
#include <fcntl.h>  
  
  
int main (int argc, char* argv[])  
{
    /* 0xc06e1740 is from /boot/System.map-2.6.xx  嵌入式环境也可以使用 
         c06e1740 D jiffies  
    */
    
    unsigned long offset = 0xc06e1740; 

    offset -= 0xc0000000;  
  
    int fd;  
    fd = open("/dev/mem", O_RDONLY);  
  
    void *p;  
    p = mmap(0, 0x10000, PROT_READ, MAP_SHARED, fd, (off_t)(offset - offset%0x10000));  
  
    volatile unsigned long *pJiffies;  
    pJiffies = (volatile unsigned long *)((char *)p + offset%0x10000);  
      
    int i;  
    for (i = 0; i < 1000; i++)  
    {  
     printf ("jiffies = %ul\n",(unsigned long)(*pJiffies));  
    }  
} 
